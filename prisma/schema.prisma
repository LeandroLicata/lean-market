generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Brands {
  id        String     @id @default(uuid()) @db.Uuid
  name      String     @unique @db.VarChar(255)
  logo_url  String?    @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Products  Products[] @relation("BrandProducts")
}

model Products {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @unique @db.VarChar(255)
  description String?
  image_url   String?  @db.VarChar(255)
  price       Decimal? @db.Decimal
  stock       Int      @default(0)
  cartItems   CartItems[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  BrandId     String?  @db.Uuid
  Brands      Brands?  @relation("BrandProducts", fields: [BrandId], references: [id])
  specifications Json?
}

model Users {
  id             String   @id @default(uuid()) @db.Uuid
  email          String   @unique @db.VarChar(255)
  hashedPassword String   @db.VarChar(255)
  cart           Carts?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Carts {
  id        String      @id @default(uuid()) @db.Uuid
  user      Users       @relation(fields: [userId], references: [id])
  userId    String      @unique @db.Uuid
  items     CartItems[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model CartItems {
  id        String    @id @default(uuid()) @db.Uuid
  cart      Carts     @relation(fields: [cartId], references: [id])
  cartId    String    @db.Uuid
  product   Products  @relation(fields: [productId], references: [id])
  productId String    @db.Uuid
  quantity  Int       @default(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
